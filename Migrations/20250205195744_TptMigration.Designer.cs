// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDotnetWebApp;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyDotnetWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250205195744_TptMigration")]
    partial class TptMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyDotnetWebApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MyDotnetWebApp.Models.Student", b =>
                {
                    b.HasBaseType("MyDotnetWebApp.Models.User");

                    b.Property<double>("CreditHours")
                        .HasColumnType("double precision");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("MyDotnetWebApp.Models.Teacher", b =>
                {
                    b.HasBaseType("MyDotnetWebApp.Models.User");

                    b.Property<double>("ClassroomHours")
                        .HasColumnType("double precision");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("MyDotnetWebApp.Models.Student", b =>
                {
                    b.HasOne("MyDotnetWebApp.Models.User", null)
                        .WithOne()
                        .HasForeignKey("MyDotnetWebApp.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyDotnetWebApp.Models.Teacher", b =>
                {
                    b.HasOne("MyDotnetWebApp.Models.User", null)
                        .WithOne()
                        .HasForeignKey("MyDotnetWebApp.Models.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
